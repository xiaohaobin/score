// import * as tf from '@tensorflow/tfjs';
var tf = require("@tensorflow/tfjs");

const model = tf.loadLayersModel('model.json');
//现在，该模型已准备好进行推理(inference)，评估(evaluation)或重新训练(re-training)。例如，模型完成加载后可以立即进行预测(predict)：

var m = [[-0.88285284,  1.26575774, -0.13102433, -0.445126  , -0.97298458,
         0.83043475, -0.78306742, -1.49096694, -1.05029345, -0.74767507,
         0.20107738, -1.55549131,  0.69471602,  0.15768717,  1.8288943 ,
         0.15874692, -0.51164709,  0.30658282,  0.97017493,  0.25296643,
         0.07419084,  0.54715231,  0.57909757, -1.4071193 , -0.48056792,
         0.25667353, -1.26603101,  1.11491771, -0.92384076,  1.52113764,
        -0.03206689, -0.91445695,  0.48467858, -0.83824469, -1.46138633,
         1.080519  , -0.27293227, -0.57373074,  1.44918161,  0.62427469,
         1.32170822,  0.34124351, -0.23064325, -0.17356544,  0.67819341,
         1.22106779,  0.16676196,  1.18353064, -0.60537564, -1.31829018,
        -0.56162907],
       [ 1.24378267,  1.41996978,  0.52587586, -0.71139884, -1.00465038,
         1.59640834, -0.08742753,  0.48157546, -1.39725341, -0.7150093 ,
        -0.04737729, -0.65964021,  1.03506999, -0.44132927, -0.47907082,
        -0.52981754,  0.56949619,  1.94090444, -0.76819673,  0.35384896,
        -0.01253641,  1.10252733,  0.53224145,  1.28999924, -1.01135853,
        -1.14658328, -1.25176884,  0.33007648,  0.17238276,  0.29619186,
        -2.32407178, -0.90553865, -0.27462914, -0.553378  , -0.0041395 ,
         1.51665312, -0.07727033,  0.31849522,  0.45415312,  0.23237597,
        -0.92801913,  0.15284099, -1.51976701, -0.15161403,  0.58759309,
        -0.78218231, -1.2774163 ,  0.04327093,  2.74551682, -1.54284653,
         1.55755131]];

// console.log(model,111);
// JavaScript

const example = tf.tensor2d(m);  // for example
console.log(example);
const prediction = model.predict(example);